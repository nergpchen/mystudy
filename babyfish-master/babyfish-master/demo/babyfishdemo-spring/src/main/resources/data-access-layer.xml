<?xml version="1.0" encoding="UTF-8"?>
<beans 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://www.springframework.org/schema/beans"
xmlns:ctx="http://www.springframework.org/schema/context"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:aop="http://www.springframework.org/schema/aop"
xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="org.babyfishdemo.spring.entities"/>
		<property name="jpaVendorAdapter">
			<!-- 
			Be careful!
			This is org.babyfish.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter,
			not org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter.
			-->
			<bean class="org.babyfish.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.order_updates">true</prop>
				<prop key="hibernate.use_identifier_rollback">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				
				<!-- 
					In this demo, when database is Oracle, 
					#{hibernateDialect} will be 
					"org.babyfish.hibernate.dialect.Oracle10gDialect"
					(not org.hibernate.dialect.Oracle10gDialect)
					to support DistinictLimitQuery.
					
					Another solution is does not specify "hibernate.dialect"
					but specify the "database" property of 
					"org.babyfish.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter".
					Please see 
					"babyfishdemo-war3shop/war3shop-dal-impl/src/main/resources/war3shop-dal-impl.spring.xml"
					of another demo project to know more.
				-->
				<prop key="hibernate.dialect">#{hibernateDialect}</prop>
				
				<!-- 
					When data base is Oracle, use this.
					This property can let babyfish-hiberante create
					the user defined analytic function "DISTINCT_RANK(ROWID)"
					automatically when the XEntityManagerFactory/XSessionFactory
					is created.
					
					If the dialect does not implement the interface 
					"org.babyfish.hibernate.dialect.DistinctLimitDialect",
					this property will be ignored.
				-->
				<prop key="babyfish.hibernate.create_oracle_distinct_rank">true</prop>
				
				<!-- 
					Otherwise, use this.
					
					If the dialect has implemented the interface 
					"org.babyfish.hibernate.dialect.DistinctLimitDialect",
					this property will be ignored.
				-->
				<prop key="babyfish.hibernate.enable_limit_in_memory">true</prop>
				
				<!-- 
					In order to demonstrate how to work with both Hsqldb and Oracle, 
					both "babyfish.hibernate.enable_limit_in_memory" and "babyfish.hibernate.create_oracle_distinct_rank" are used
					in this demo.
	
					In real projects, it unnecessary to work with two databases, please don't use both of them together.
				-->
				
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<ctx:component-scan base-package="org.babyfishdemo.spring.dal.impl"/>
	
</beans>