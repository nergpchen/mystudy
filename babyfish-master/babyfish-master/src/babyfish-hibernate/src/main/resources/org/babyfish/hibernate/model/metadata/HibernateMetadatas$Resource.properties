entityClassIsHibernateProxy                         = The entity class "{0}" that used object model is invalid, it should not implements the interface "{1}".
sessionFactoryIsClosed                              = The parameter whose type is "{0}" can not be closed
createPersistentClassCanNotReturnNull               = The class "{0}" is illegal, the method "{1}({2})" can not return null
illegalJPAProperty                                  = The property "{0}" of the entity class "{1}" is illegal, no property of object model class "{2}" mapped it by default mapping rule or explicit mapping "@{3}", "@{4}" or "@{5}"
persistentScalarPropertyMustBeLazy                  = The property "{1}" of the object model interface "{0}" is deferrable, so correspondingly, the JPA property "{3}" of the JPA entity class "{2}" must be lazy
persistentScalarPropertyMustNotBeLazy               = The property "{1}" of the object model interface "{0}" is not deferrable, so correspondingly, the JPA property "{3}" of the JPA entity class "{2}" must not be lazy
persistentPropertyMustBeComponent                   = The property "{1}" of the object model interface "{0}" is embedded, so correspondingly, the JPA property "{3}" of the JPA entity class "{2}" must be embedded
persistentPropertyMustNotBeComponent                = The property "{1}" of the object model interface "{0}" is not embedded, so correspondingly, the JPA property "{3}" of the JPA entity class "{2}" must not be embedded
persistentPropertyMustBeAssociation                 = The property "{1}" of the object model interface "{0}" is association property, so correspondingly, the JPA property "{3}" of the JPA entity class "{2}" must be association property(@OneToOne, @ManyToOne, @OneToMany, @ManyToMany)
persistentPropertyMustNotBeAssociation              = The property "{1}" of the object model interface "{0}" is scalar property, so correspondingly, the JPA property "{3}" of the JPA entity class "{2}" must be scalar property
persistentPropertyMustBeCollection                  = The property "{1}" of the object model interface "{0}" is collection property, so correspondingly, the JPA property "{3}" of the JPA entity class "{2}" must be collection proprty(@OneToMany, @ManyToMany)
persistentPropertyMustNotBeCollection               = The property "{1}" of the object model interface "{0}" is reference property, so correspondingly, the JPA property "{3}" of the JPA entity class "{2}" must be reference property(@ManyToOne, @OneToOne)
persistentPropertyMustBeInverse                     = The association property "{1}" of the object model interface "{0}" is inverse, so correspondingly, the JPA property "{3}" of the JPA entity class "{2}" must be inverse
persistentPropertyMustNotBeInverse                  = The association property "{1}" of the object model interface "{0}" is not inverse, so correspondingly, the JPA property "{3}" of the JPA entity class "{2}" must not be inverse
persistentPropertyMustNotBeInsertableAndUpdateable  = The reference property "{1}" of the object model interface "{0}" is inverse, so correspondingly, the JPA property "{3}" of the JPA entity class "{2}" must not be inserable and updateable
