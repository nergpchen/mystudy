illegalViewInfo                                                 = Can not create the view because the parameter \"viewInfo\" is not an planned object
createRootDataMustReturnNonNull                                 = The class {0} has override the method createRootData, but it returns null
createDefaultBaseMustReturnNonNull                              = The class {0} has override the method createDefaultBase, but it returns null
createEventDispatcherMustReturnNonNull                          = The class {0} has override the method createEventDispatcher(), but it return null
createBaseViewMustReturnView                                    = The class {0} has override the method createBaseView, but the returned value is not an instance of {1}
ownerOfReturnedValueOfCreateEventDispatcherMustBeThis           = The class {0} has override the method createEventDispatcher(), it return a non-null object, but the method getOwner of the returned object does not return this
concurrentModification                                          = Can not access the iterator because collection has been modified by other API, not via this iterator
invokeGetRootOwnerTooEarlySoThatTheRootOwnerIsNull              = Invoke the getRootOwner() to early so that there is no data in the current object
canNotSetNullBaseWhenTheRootDataIsContructorOnlyRootData        = When the root data is an instance of {0}, the parameter of method setBase can not be null
canNotSetBaseTwiceWhenTheRootDataIsSetOnceOnlyRootData          = When the root data is an instance of {0}, the method setBase can not be invoked twice 
canNotSetBaseDuringSerializing                                  = The method setBase can not be invoke during the serializing
mustSetTheBaseInContstructorWhenTheRootDataImplementsRootData   = For the root data that implements {0}, the non-null base collection must be set by the constructor.
mustOverrideCreateEventDispatcher                               = The class {0} must override the method createEventDispatcher and never call its implementation of the super class {1}
currentCollectionIsDisabled                                     = The current collection whose type is "{0}" is disabled 
whenDefaultUnifiedComparatorIsNotNull                           = When "this.getDefaultUnifiedComparator()" returns a non-null value
whenDefaultKeyUnifiedComparatorIsNotNull                        = When "this.getDefaultKeyUnifiedComparator()" returns a non-null value
whenDefaultValueUnifiedComparatorIsNotNull                      = When "this.getDefaultValueUnifiedComparator()" returns a non-null value
whenThisIsModificationAware                                     = When this object is an instance of {0}
