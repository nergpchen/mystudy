# Please see the native2ascii maven plugin in the pom.xml of babyfish-parent.
mustBeNull                                  = 参数或表达式{0}必须为null
mustNotBeNull                               = 参数或表达式{0}不能为null
mustNotBeEmpty                              = 参数或表达式{0}长度不能为0
mustNotContainNullElements                  = 参数或表达式{0}不能包含null元素
mustNotContainEmptyElements                 = 参数或表达式{0}不能包含长度为0的元素
mustNotContainSpecialElements               = 参数或表达式{0}不能包含类型为{1}的元素
mustNotContainNullKeys                      = 参数或表达式{0}不能包含null键
mustNotContainEmptyKeys                     = 参数或表达式{0}不能包含长度为0的键
mustNotContainSpecialKeys                   = 参数或表达式{0}不能包含类型为{1}的键
mustNotContainNullValues                    = 参数或表达式{0}不能包含null值
mustNotContainEmptyValues                   = 参数或表达式{0}不能包含长度为0的值
mustNotContainSpecialValues                 = 参数或表达式{0}不能包含类型为{1}的值
mustBeClass                                 = 参数或表达式{0}必须是类类型
mustNotBeClass                              = 参数或表达式{0}不能是类类型
mustBeInterface                             = 参数或表达式{0}必须是接口类型
mustNotBeInterface                          = 参数或表达式{0}不能是接口类型
mustBeEnum                                  = 参数或表达式{0}必须是枚举类型
mustNotBeEnum                               = 参数或表达式{0}不能是枚举类型
mustBeAnnotation                            = 参数或表达式{0}必须是注解类型
mustNotBeAnnotation                         = 参数或表达式{0}不能是注解类型
mustBeArray                                 = 参数或表达式{0}必须是数组类型
mustNotBeArray                              = 参数或表达式{0}不能是数组类型
mustBePrimitive                             = 参数或表达式{0}必须是基本类型
mustNotBePrimitive                          = 参数或表达式{0}不能是基本类型
mustBeBox                                   = 参数或表达式{0}必须是{1}中任意一个类型
mustNotBeBox                                = 参数或表达式{0}不能是{1}中任意类型
mustBeAbstract                              = 参数或表达式{0}必须是抽象类型
mustNotBeAbstract                           = 参数或表达式{0}不能是抽象类型
mustBeFinal                                 = 参数或表达式{0}必须是最终类型
mustNotBeFinal                              = 参数或表达式{0}不能是最终类型
mustBeEqualToValue                          = 参数或表达式{0}必须等于值{1}
mustNotBeEqualToValue                       = 参数或表达式{0}不能等于值{1}
mustBeGreaterThanValue                      = 参数或表达式{0}必须大于值{1}
mustBeGreaterThanOrEqualToValue             = 参数或表达式{0}必须大于或等于值{1}
mustBeLessThanValue                         = 参数或表达式{0}必须小于值{1}
mustBeLessThanOrEqualToValue                = 参数或表达式{0}必须小于或等于值{1}
mustBetweenValue                            = 参数或表达式{0}必须{1}值{2}且{3}值{4}
mustBeInstanceOfValue                       = 参数或表达式{0}所指对象类型必须兼容{1}类型
mustBeInstanceOfAllOfValue                  = 参数或表达式{0}所指对象类型必须兼容{1}中所有类型
mustBeInstanceOfAnyOfValue                  = 参数或表达式{0}所指对象类型必须兼容{1}中任意一个类型
mustNotBeInstanceOfValue                    = 参数或表达式{0}所指对象类型不能兼容{1}类型
mustNotBeInstanceOfAnyOfValue               = 参数或表达式{0}所指对象类型不能兼容{1}中任意类型
mustBeCompatibleWithValue                   = 表示类型的参数或表达式{0}必须兼容{1}类型
mustBeCompatibleWithAllOfValue              = 表示类型的参数或表达式{0}必须兼容{1}中所有类型
mustBeCompatibleWithAnyOfValue              = 表示类型的参数或表达式{0}必须兼容{1}任意类型
mustNotBeCompatibleWithValue                = 表示类型的参数或表达式{0}不能兼容{1}类型
mustNotBeCompatibleWithAnyOfValue           = 表示类型的参数或表达式{0}不能兼容{1}中任意类型
mustBeAnyOfValue                            = 参数或表达式{0}必须是{1}中任意一个值
mustNotBeAnyOfValue                         = 参数或表达式{0}不能是{1}中任意一个值
mustBeEqualToOther                          = 参数或表达式{0}必须等于参数或表达式{1}
mustNotBeEqualToOther                       = 参数或表达式{0}不能等于参数或表达式{1}
mustBeGreaterThanOther                      = 参数或表达式{0}必须大于参数{1}
mustBeGreaterThanOrEqualToOther             = 参数或表达式{0}必须大于或等于参数或表达式{1}
mustBeLessThanOther                         = 参数或表达式{0}必须小于另外一个参数或表达式{1}
mustBeLessThanOrEqualToOther                = 参数或表达式{0}必须小于或等于参数或表达式{1}
mustBetweenOther                            = 参数或表达式{0}必须{1}参数或表达式{2}且{3}参数或表达式{4}
mustBeInstanceOfOther                       = 参数或表达式{0}所指对象的类型必须兼容参数或表达式{1}
mustBeInstanceOfAllOfOther                  = 参数或表达式{0}所指对象的类型必须兼容参数或表达式{1}中所有类型
mustBeInstanceOfAnyOfOther                  = 参数或表达式{0}所指对象的类型必须兼容参数或表达式{1}中任意一个类型
mustNotBeInstanceOfOther                    = 参数或表达式{0}所指对象的类型不能兼容参数或表达式{1}
mustNotBeInstanceOfAnyOfOther               = 参数或表达式{0}所指对象的类型不能兼容参数或表达式{1}中所有类型
mustBeCompatibleWithOther                   = 表示类型的参数或表达式{0}必须兼容参数或表达式{1}
mustBeCompatibleWithAllOfOther              = 表示类型的参数或表达式{0}必须兼容参数或表达式{1}中所有类型
mustBeCompatibleWithAnyOfOther              = 表示类型的参数或表达式{0}必须兼容参数或表达式{1}中任意一个类型
mustNotBeCompatibleWithOther                = 表示类型的参数或表达式{0}不能兼容参数或表达式{1}
mustNotBeCompatibleWithAnyOfOther           = 表示类型的参数或表达式{0}不能兼容参数或表达式{1}中任意类型
mustBeAnyOfOther                            = 参数或表达式{0}必须是参数或表达式{1}中任意一个值
mustNotBeAnyOfOther                         = 参数或表达式{0}不能是参数或表达式{1}中任意一个值
mustBeNullWhen                              = {0}，参数或表达式{1}必须为null
mustNotBeNullWhen                           = {0}，参数或表达式{1}不能为null
mustNotBeEmptyWhen                          = {0}，参数或表达式{1}长度不能为0
mustNotContainNullElementsWhen              = {0}，参数或表达式{1}不能包含null元素
mustNotContainEmptyElementsWhen             = {0}，参数或表达式{1}不能包含长度为0的元素
mustNotContainSpecialElementsWhen           = {0}，参数或表达式{1}不能包含类型为{2}的元素
mustNotContainNullKeysWhen                  = {0}，参数或表达式{1}不能包含null键
mustNotContainEmptyKeysWhen                 = {0}，参数或表达式{1}不能包含长度为0的键
mustNotContainSpecialKeysWhen               = {0}，参数或表达式{1}不能包含类型为{2}的键
mustNotContainNullValuesWhen                = {0}，参数或表达式{1}不能包含null值
mustNotContainEmptyValuesWhen               = {0}，参数或表达式{1}不能包含长度为0的值
mustNotContainSpecialValuesWhen             = {0}，参数或表达式{1}不能包含类型为{2}的值
mustBeClassWhen                             = {0}，参数或表达式{1}必须是类类型
mustNotBeClassWhen                          = {0}，参数或表达式{1}不能是类类型
mustBeInterfaceWhen                         = {0}，参数或表达式{1}必须是接口类型
mustNotBeInterfaceWhen                      = {0}，参数或表达式{1}不能是接口类型
mustBeEnumWhen                              = {0}，参数或表达式{1}必须是枚举类型
mustNotBeEnumWhen                           = {0}，参数或表达式{1}不能是枚举类型
mustBeAnnotationWhen                        = {0}，参数或表达式{1}必须是注解类型
mustNotBeAnnotationWhen                     = {0}，参数或表达式{1}不能是注解类型
mustBeArrayWhen                             = {0}，参数或表达式{1}必须是数组类型
mustNotBeArrayWhen                          = {0}，参数或表达式{1}不能是数组类型
mustBePrimitiveWhen                         = {0}，参数或表达式{1}必须是基本类型
mustNotBePrimitiveWhen                      = {0}，参数或表达式{1}不能是基本类型
mustBeAbstractWhen                          = {0}，参数或表达式{1}必须是抽象类型
mustNotBeAbstractWhen                       = {0}，参数或表达式{1}不能是抽象类型
mustBeFinalWhen                             = {0}，参数或表达式{1}必须是最终类型
mustNotBeFinalWhen                          = {0}，参数或表达式{1}不能是最终类型
mustNotBeEqualToValueWhen                   = {0}，参数或表达式{1}不能等于值{2}
mustBeGreaterThanValueWhen                  = {0}，参数或表达式{1}必须大于值{2}
mustBeGreaterThanOrEqualToValueWhen         = {0}，参数或表达式{1}必须大于或等于值{2}
mustBeLessThanValueWhen                     = {0}，参数或表达式{1}必须小于值{2}
mustBeLessThanOrEqualToValueWhen            = {0}，参数或表达式{1}必须小于或等于值{2}
mustBetweenValueWhen                        = {0}，参数或表达式{1}必须{2}值{3}且{4}值{5}
mustBeInstanceOfValueWhen                   = {0}，参数或表达式{1}所指对象类型必须兼容{2}类型
mustBeInstanceOfAllOfValueWhen              = {0}，参数或表达式{1}所指对象类型必须兼容{2}中所有类型
mustBeInstanceOfAnyOfValueWhen              = {0}，参数或表达式{1}所指对象类型必须兼容{2}中任意一个类型
mustNotBeInstanceOfValueWhen                = {0}，参数或表达式{1}所指对象类型不能兼容{2}类型
mustNotBeInstanceOfAnyOfValueWhen           = {0}，参数或表达式{1}所指对象类型不能兼容{2}中任意类型
mustBeCompatibleWithValueWhen               = {0}，表示类型的参数或表达式{1}必须兼容{2}类型
mustBeCompatibleWithAllOfValueWhen          = {0}，表示类型的参数或表达式{1}必须兼容{2}中所有类型
mustBeCompatibleWithAnyOfValueWhen          = {0}，表示类型的参数或表达式{1}必须兼容{2}任意类型
mustNotBeCompatibleWithValueWhen            = {0}，表示类型的参数或表达式{1}不能兼容{2}类型
mustNotBeCompatibleWithAnyOfValueWhen       = {0}，表示类型的参数或表达式{1}不能兼容{2}中任意类型
mustBeAnyOfValueWhen                        = {0}，参数或表达式{1}必须是{2}中任意一个值
mustNotBeAnyOfValueWhen                     = {0}，参数或表达式{1}不能是{2}中任意一个值
mustBeEqualToOtherWhen                      = {0}，参数或表达式{1}必须等于参数或表达式{2}
mustNotBeEqualToOtherWhen                   = {0}，参数或表达式{1}不能等于参数或表达式{2}
mustBeGreaterThanOtherWhen                  = {0}，参数或表达式{1}必须大于参数{2}
mustBeGreaterThanOrEqualToOtherWhen         = {0}，参数或表达式{1}必须大于或等于参数或表达式{2}
mustBeLessThanOtherWhen                     = {0}，参数或表达式{1}必须小于另外一个参数或表达式{2}
mustBeLessThanOrEqualToOtherWhen            = {0}，参数或表达式{1}必须小于或等于参数或表达式{2}
mustBetweenOtherWhen                        = {0}，参数或表达式{1}必须{2}参数或表达式{3}且{4}参数或表达式{5}
mustBeInstanceOfOtherWhen                   = {0}，参数或表达式{1}所指对象的类型必须兼容参数或表达式{2}
mustBeInstanceOfAllOfOtherWhen              = {0}，参数或表达式{1}所指对象的类型必须兼容参数或表达式{2}中所有类型
mustBeInstanceOfAnyOfOtherWhen              = {0}，参数或表达式{1}所指对象的类型必须兼容参数或表达式{2}中任意一个类型
mustNotBeInstanceOfOtherWhen                = {0}，参数或表达式{1}所指对象的类型不能兼容参数或表达式{2}
mustNotBeInstanceOfAnyOfOtherWhen           = {0}，参数或表达式{1}所指对象的类型不能兼容参数或表达式{2}中所有类型
mustBeCompatibleWithOtherWhen               = {0}，表示类型的参数或表达式{1}必须兼容参数或表达式{2}
mustBeCompatibleWithAllOfOtherWhen          = {0}，表示类型的参数或表达式{1}必须兼容参数或表达式{2}中所有类型
mustBeCompatibleWithAnyOfOtherWhen          = {0}，表示类型的参数或表达式{1}必须兼容参数或表达式{2}中任意一个类型
mustNotBeCompatibleWithOtherWhen            = {0}，表示类型的参数或表达式{1}不能兼容参数或表达式{2}
mustNotBeCompatibleWithAnyOfOtherWhen       = {0}，表示类型的参数或表达式{1}不能兼容参数或表达式{2}中任意类型
mustBeAnyOfOtherWhen                        = {0}，参数或表达式{1}必须是参数或表达式{2}中任意一个值
mustNotBeAnyOfOtherWhen                     = {0}，参数或表达式{1}不能是参数或表达式{2}中任意一个值
