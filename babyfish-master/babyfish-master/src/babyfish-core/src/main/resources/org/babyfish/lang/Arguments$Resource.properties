mustBeNull                              = The argument or expression "{0}" must be null
mustNotBeNull                           = The argument or expression "{0}" must not be null
mustNotBeEmpty                          = The argument or expression "{0}" must not be empty
mustNotContainNullElements              = The argument or expression "{0}" must not contain null elements
mustNotContainEmptyElements             = The argument or expression "{0}" must not contain empty elements
mustNotContainSpecialElements           = The argument or expression "{0}" must not contain the elements whose type is "{1}"
mustNotContainNullKeys                  = The argument or expression "{0}" must not contain null keys
mustNotContainEmptyKeys                 = The argument or expression "{0}" must not contain empty keys
mustNotContainSpecialKeys               = The argument or expression "{0}" must not contain the keys whose type is "{1}"
mustNotContainNullValues                = The argument or expression "{0}" must not contain null values
mustNotContainEmptyValues               = The argument or expression "{0}" must not contain empty values
mustNotContainSpecialValues             = The argument or expression "{0}" must not contain the values whose type is "{1}"
mustBeClass                             = The argument or expression "{0}" that is an instance of java.lang.Class must specify a class
mustNotBeClass                          = The argument or expression "{0}" that is an instance of java.lang.Class must not specify a class
mustBeInterface                         = The argument or expression "{0}" that is an instance of java.lang.Class must specify an interface
mustNotBeInterface                      = The argument or expression "{0}" that is an instance of java.lang.Class must not specify an interface
mustBeEnum                              = The argument or expression "{0}" that is an instance of java.lang.Class must specify an enumeration
mustNotBeEnum                           = The argument or expression "{0}" that is an instance of java.lang.Class must not specify an enumeration
mustBeAnnotation                        = The argument or expression "{0}" that is an instance of java.lang.Class must specify an annotation
mustNotBeAnnotation                     = The argument or expression "{0}" that is an instance of java.lang.Class must not specify an annotation
mustBeArray                             = The argument or expression "{0}" that is an instance of java.lang.Class must specify an array
mustNotBeArray                          = The argument or expression "{0}" that is an instance of java.lang.Class must not specify an array
mustBePrimitive                         = The argument or expression "{0}" that is an instance of java.lang.Class must specify a primitive type
mustNotBePrimitive                      = The argument or expression "{0}" that is an instance of java.lang.Class must not specify a primitive type
mustBeBox                               = The argument or expression "{0}" that is an instance of java.lang.Class must be one of "{1}"
mustNotBeBox                            = The argument or expression "{0}" that is an instance of java.lang.Class must not be one of "{1}"
mustBeAbstract                          = The argument or expression "{0}" that is an instance of java.lang.Class must specify an abstract class
mustNotBeAbstract                       = The argument or expression "{0}" that is an instance of java.lang.Class must not specify an abstract class
mustBeFinal                             = The argument or expression "{0}" that is an instance of java.lang.Class must specify a final class
mustNotBeFinal                          = The argument or expression "{0}" that is an instance of java.lang.Class must not specify a final class
mustBeEqualToValue                      = The argument or expression "{0}" must be equal to "{1}"
mustNotBeEqualToValue                   = The argument or expression "{0}" must not be equal to "{1}"
mustBeGreaterThanValue                  = The argument or expression "{0}" must be greater than "{1}"
mustBeGreaterThanOrEqualToValue         = The argument or expression "{0}" must be greater than or equal to "{1}"
mustBeLessThanValue                     = The argument or expression "{0}" must be less than "{1}"
mustBeLessThanOrEqualToValue            = The argument or expression "{0}" must be less than or equal to "{1}"
mustBetweenValue                        = The argument or expression "{0}" must {1} "{2}" and {3} "{4}"
mustBeInstanceOfValue                   = The argument or expression "{0}" must be an instance of "{1}"
mustBeInstanceOfAllOfValue              = The argument or expression "{0}" must be an instance of all type of "{1}"
mustBeInstanceOfAnyOfValue              = The argument or expression "{0}" must be an instance of any type of "{1}"
mustNotBeInstanceOfValue                = The argument or expression "{0}" must not be an instance of "{1}"
mustNotBeInstanceOfAnyOfValue           = The argument or expression "{0}" must not be an instance of any type of "{1}"
mustBeCompatibleWithValue               = The argument or expression "{0}" that is an instance of java.lang.Class must be compatible with "{1}"
mustBeCompatibleWithAllOfValue          = The argument or expression "{0}" that is an instance of java.lang.Class must be compatible with all type of "{1}"
mustBeCompatibleWithAnyOfValue          = The argument or expression "{0}" that is an instance of java.lang.Class must be compatible with any type of "{1}"
mustNotBeCompatibleWithValue            = The argument or expression "{0}" that is an instance of java.lang.Class must not compatible with "{1}"
mustNotBeCompatibleWithAnyOfValue       = The argument or expression "{0}" that is an instance of java.lang.Class must not compatible with any type of "{1}"
mustBeAnyOfValue                        = The argument or expression "{0}" must be the any one of the values "{1}"
mustNotBeAnyOfValue                     = The argument or expression "{0}" must not be the any one of the values "{1}"
mustBeEqualToOther                      = The argument or expression "{0}" must be equal to the value of the argument or expression "{1}"
mustNotBeEqualToOther                   = The argument or expression "{0}" must not be equal to the value of the argument or expression "{1}"
mustBeGreaterThanOther                  = The argument or expression "{0}" must be greater than the value of the argument or expression "{1}"
mustBeGreaterThanOrEqualToOther         = The argument or expression "{0}" must be greater than or equal to the value of the argument or expression "{1}"
mustBeLessThanOther                     = The argument or expression "{0}" must be less than the value of the argument or expression "{1}"
mustBeLessThanOrEqualToOther            = The argument or expression "{0}" must be less than or equal to the value of the argument or expression "{1}"
mustBetweenOther                        = The argument or expression "{0}" must {1} the value of the argument or expression "{2}" and {3} the value of the argument or expression "{4}"
mustBeInstanceOfOther                   = The argument or expression "{0}" must be an instance of the class specified by the argument or expression "{1}"
mustBeInstanceOfAllOfOther              = The argument or expression "{0}" must be an instance of all type of the classes specified by the argument or expression "{1}"
mustBeInstanceOfAnyOfOther              = The argument or expression "{0}" must be an instance of any type of the classes specified by the argument or expression "{1}"
mustNotBeInstanceOfOther                = The argument or expression "{0}" must not be an instance of the class specified by the argument or expression "{1}"
mustNotBeInstanceOfAnyOfOther           = The argument or expression "{0}" must not be an instance of any type of the classes specified by the argument or expression "{1}"
mustBeCompatibleWithOther               = The argument or expression "{0}" that is an instance of java.lang.Class must be compatible with the class specified by the argument or expression "{1}"
mustBeCompatibleWithAllOfOther          = The argument or expression "{0}" that is an instance of java.lang.Class must be compatible with all type of the classes specified by the argument or expression "{1}"
mustBeCompatibleWithAnyOfOther          = The argument or expression "{0}" that is an instance of java.lang.Class must be compatible with any type of the classes specified by the argument or expression "{1}"
mustNotBeCompatibleWithOther            = The argument or expression "{0}" that is an instance of java.lang.Class must not compatible with the class specified by the argument or expression "{1}"
mustNotBeCompatibleWithAnyOfOther       = The argument or expression "{0}" that is an instance of java.lang.Class must not compatible with any type of the classes specified by the argument or expression "{1}"
mustBeAnyOfOther                        = The argument or expression "{0}" must be the any one of the values specified by the argument or expression"{1}"
mustNotBeAnyOfOther                     = The argument or expression "{0}" must not be the any one of the values specified by the argument or expression"{1}"
mustBeNullWhen                          = {0}, the argument or expression "{1}" must be null
mustNotBeNullWhen                       = {0}, the argument or expression "{1}" must not be null
mustBeEmptyWhen                         = {0}, the argument or expression "{1}" must be empty
mustNotBeEmptyWhen                      = {0}, the argument or expression "{1}" must not be empty
mustNotContainNullElementsWhen          = {0}, the argument or expression "{1}" must not contain null elements
mustNotContainEmptyElementsWhen         = {0}, the argument or expression "{1}" must not contain empty elements
mustNotContainSpecialElementsWhen       = {0}, the argument or expression "{1}" must not contain the elements whose type is "{2}"
mustNotContainNullKeysWhen              = {0}, the argument or expression "{1}" must not contain null keys
mustNotContainEmptyKeysWhen             = {0}, the argument or expression "{1}" must not contain empty keys
mustNotContainSpecialKeysWhen           = {0}, the argument or expression "{1}" must not contain the keys whose type is "{2}"
mustNotContainNullValuesWhen            = {0}, the argument or expression "{1}" must not contain null values
mustNotContainEmptyValuesWhen           = {0}, the argument or expression "{1}" must not contain empty values
mustNotContainSpecialValuesWhen         = {0}, the argument or expression "{1}" must not contain the values whose type is "{2}"
mustBeClassWhen                         = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must specify a class
mustNotBeClassWhen                      = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must not specify a class
mustBeInterfaceWhen                     = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must specify an interface
mustNotBeInterfaceWhen                  = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must not specify an interface
mustBeEnumWhen                          = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must specify an enumeration
mustNotBeEnumWhen                       = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must not specify an enumeration
mustBeAnnotationWhen                    = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must specify an annotation
mustNotBeAnnotationWhen                 = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must not specify an annotation
mustBeArrayWhen                         = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must specify an array
mustNotBeArrayWhen                      = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must not specify an array
mustBePrimitiveWhen                     = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must specify a primitive type
mustNotBePrimitiveWhen                  = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must not specify a primitive type
mustBeAbstractWhen                      = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must specify an abstract class
mustNotBeAbstractWhen                   = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must not specify an abstract class
mustBeFinalWhen                         = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must specify a final class
mustNotBeFinalWhen                      = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must not specify a final class
mustNotBeEqualToValueWhen               = {0}, the argument or expression "{1}" must not be equal to "{2}"
mustBeGreaterThanValueWhen              = {0}, the argument or expression "{1}" must be greater than "{2}"
mustBeGreaterThanOrEqualToValueWhen     = {0}, the argument or expression "{1}" must be greater than or equal to "{2}"
mustBeLessThanValueWhen                 = {0}, the argument or expression "{1}" must be less than "{2}"
mustBeLessThanOrEqualToValueWhen        = {0}, the argument or expression "{1}" must be less than or equal to "{2}"
mustBetweenValueWhen                    = {0}, the argument or expression "{1}" must {2} "{3}" and {4} "{5}"
mustBeInstanceOfValueWhen               = {0}, the argument or expression "{1}" must be an instance of "{2}"
mustBeInstanceOfAllOfValueWhen          = {0}, the argument or expression "{1}" must be an instance of all type of "{2}"
mustBeInstanceOfAnyOfValueWhen          = {0}, the argument or expression "{1}" must be an instance of any type of "{2}"
mustNotBeInstanceOfValueWhen            = {0}, the argument or expression "{1}" must not be an instance of "{2}"
mustNotBeInstanceOfAnyOfValueWhen       = {0}, the argument or expression "{1}" must not be an instance of any type of "{2}"
mustBeCompatibleWithValueWhen           = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must be compatible with "{2}"
mustBeCompatibleWithAllOfValueWhen      = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must be compatible with all type of "{2}"
mustBeCompatibleWithAnyOfValueWhen      = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must be compatible with any type of "{2}"
mustNotBeCompatibleWithValueWhen        = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must not compatible with "{2}"
mustNotBeCompatibleWithAnyOfValueWhen   = {0}, the argument or expression "{1}" that type is an instance of java.lang.Class must not compatible with any type of "{2}"
mustBeAnyOfValueWhen                    = {0}, the argument or expression "{1}" must be the any one of the values "{2}"
mustNotBeAnyOfValueWhen                 = {0}, the argument or expression "{1}" must not be the any one of the values "{2}"
mustBeEqualToOtherWhen                  = {0}, the argument or expression "{1}" must be equal to the value of the argument or expression "{2}"
mustNotBeEqualToOtherWhen               = {0}, the argument or expression "{1}" must not be equal to the value of the argument or expression "{2}"
mustBeGreaterThanOtherWhen              = {0}, the argument or expression "{1}" must be greater than the value of the argument or expression "{2}"
mustBeGreaterThanOrEqualToOtherWhen     = {0}, the argument or expression "{1}" must be greater than or equal to the value of the argument or expression "{2}"
mustBeLessThanOtherWhen                 = {0}, the argument or expression "{1}" must be less than the value of the argument or expression "{2}"
mustBeLessThanOrEqualToOtherWhen        = {0}, the argument or expression "{1}" must be less than or equal to the value of the argument or expression "{2}"
mustBetweenOtherWhen                    = {0}, the argument or expression "{1}" must {2} the value of the argument or expression "{3}" and {4} the value of the argument or expression "{5}"
mustBeInstanceOfOtherWhen               = {0}, the argument or expression "{1}" must be an instance of the class specified by the argument or expression "{2}"
mustBeInstanceOfAllOfOtherWhen          = {0}, the argument or expression "{1}" must be an instance of all type of the classes specified by the argument or expression "{2}"
mustBeInstanceOfAnyOfOtherWhen          = {0}, the argument or expression "{1}" must be an instance of any type of the classes specified by the argument or expression "{2}"
mustNotBeInstanceOfOtherWhen            = {0}, the argument or expression "{1}" must not be an instance of the class specified by the argument or expression "{2}"
mustNotBeInstanceOfAnyOfOtherWhen       = {0}, the argument or expression "{1}" must not be an instance of any type of the classes specified by the argument or expression "{2}"
mustBeCompatibleWithOtherWhen           = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must be compatible with the class specified by the argument or expression "{2}"
mustBeCompatibleWithAllOfOtherWhen      = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must be compatible with all type of the classes specified by the argument or expression "{2}"
mustBeCompatibleWithAnyOfOtherWhen      = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must be compatible with any type of the classes specified by the argument or expression "{2}"
mustNotBeCompatibleWithOtherWhen        = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must not compatible with the class specified by the argument or expression "{2}"
mustNotBeCompatibleWithAnyOfOtherWhen   = {0}, the argument or expression "{1}" that is an instance of java.lang.Class must not compatible with any type of the classes specified by the argument or expression "{2}"
mustBeAnyOfOtherWhen                    = {0}, the argument or expression "{1}" must be the any one of the values specified by the argument or expression"{2}"
mustNotBeAnyOfOtherWhen                 = {0}, the argument or expression "{1}" must not be the any one of the values specified by the argument or expression"{2}"
