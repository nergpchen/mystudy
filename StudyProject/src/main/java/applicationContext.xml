<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="     
          http://www.springframework.org/schema/beans     
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd     
          http://www.springframework.org/schema/context     
          http://www.springframework.org/schema/context/spring-context-3.0.xsd 
          http://www.springframework.org/schema/aop     
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
    default-autowire="byName">

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.mystudy">
	</context:component-scan>

   
	<!-- 声明通知类 -->
    <bean id="baseBefore" class="com.mystudy.spring.aop.advice.BeforeAdvice" />
    <bean id="baseAfterReturn" class="com.mystudy.spring.aop.advice.AfterAdvice" />
    <bean id="baseAround" class="com.mystudy.spring.aop.advice.AroundAdvice" />
	
	<!-- 指定切点匹配类 -->
    <bean id="pointcut" class="com.mystudy.spring.pointcut.MyPointCut" />
        
        <!-- 包装通知，指定切点 -->
    <bean id="matchBeforeAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="pointcut">
            <ref bean="pointcut" />
        </property>
        <!-- 这个用来定义调用方法钱的通知动作:如果当前的方法调用和切入点匹配的化，则调用前置通知的动作 -->
        <property name="advice">
            <ref bean="baseBefore" />
        </property>
    </bean>
        
    <context:component-scan base-package="aop.annotation" />
    <!-- 打开aop 注解 -->
    <aop:aspectj-autoproxy />

</beans>